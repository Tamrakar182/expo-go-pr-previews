name: Expo Go QR Preview

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  preview:
    runs-on: ubuntu-latest
    timeout-minutes: 60  # Prevent hanging workflows
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 10.6.4

      - name: Install dependencies
        run: pnpm install

      - name: Install QR dependencies
        run: pnpm install qrcode

      - name: Start Expo dev server and generate QR
        id: expo_server
        run: |
          # Start Expo in tunnel mode and capture URL
          echo "Starting Expo server..."
          expo_url=$(pnpm dlx expo start --tunnel --non-interactive 2>&1 | tee expo.log | grep -o 'exp://[^ ]*' | head -n 1)
          
          # Wait for URL to be available
          counter=0
          while [ -z "$expo_url" ] && [ $counter -lt 30 ]; do
            sleep 5
            expo_url=$(grep -o 'exp://[^ ]*' expo.log | head -n 1)
            counter=$((counter+1))
            echo "Attempt $counter to get Expo URL..."
          done
          
          if [ -z "$expo_url" ]; then
            echo "::error::Failed to get Expo URL"
            exit 1
          fi
          
          echo "EXPO_URL=$expo_url" >> $GITHUB_ENV
          echo "QR_TEXT=$expo_url" >> $GITHUB_ENV
          
          # Generate QR code
          mkdir -p qr
          node -e "
            const qr = require('qrcode');
            qr.toFile(
              './qr/expo-qr.png', 
              process.env.QR_TEXT, 
              { 
                margin: 2,
                width: 300,
                errorCorrectionLevel: 'H'
              }, 
              (err) => { if (err) throw err }
            );
          "
          
          # Keep the server running (this will block the step)
          echo "Expo server is running..."
          sleep infinity

      - name: Upload QR image
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: expo-qr
          path: qr/expo-qr.png

      - name: Base64 encode QR image
        if: always()
        id: qr_base64
        run: |
          echo "QR_BASE64=$(base64 -w 0 qr/expo-qr.png)" >> $GITHUB_OUTPUT

      - name: Create QR comment
        if: always()
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: |
            ðŸ“± **Expo Go Preview**
            
            ### Scan this QR code with [Expo Go](https://expo.dev/client):
            <img src="data:image/png;base64,${{ steps.qr_base64.outputs.QR_BASE64 }}" width="200" alt="Expo QR Code"/>
            
            ### Or open this link on your device:
            `${{ env.EXPO_URL }}`
            
            _Note: This preview will only work while this GitHub Actions job is running (typically 60 minutes)._
            
            _To keep the preview available longer, you may need to run `expo start --tunnel` locally._
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}